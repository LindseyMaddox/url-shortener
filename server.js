//if not a valid url, json will say error {"error":"This url is not on the database."}
//when you enter (OR CLICK ON) your shortened url, it will redirect to original site

//data model
//url_shortener_map
//columns: id, parent_url, shortened_url
//insert if doesn't exist
//shortened_url generated by root url + random number
//shortened_url must be unique

var express = require('express');
var app = express();
const bodyParser= require('body-parser');
app.use(bodyParser.urlencoded({extended: true}));
const MongoClient = require('mongodb').MongoClient;
//need to get alink
var mongoUrl = "mongodb://llmaddox:herokumary4git@ds133328.mlab.com:33328/shorten-your-url"
MongoClient.connect(mongoUrl, (err, db) => {
  if (err) throw err;
  var db = db;
    // set the port of our application
  // process.env.PORT lets the port be set by Heroku
  //only listen when 
  var port = process.env.PORT || 8080;
  
  app.listen(port, function () {
    console.log('listening on' + port);
  });
  
  app.get('/', function(req, res){
    res.sendFile("index.html", {"root": __dirname});
  });
  
  // app.post('/', function(req,res){
    
  //   db.collection('shortener_map').save(req.body, (err, result) => {
  //     if (err) return console.log(err)
  
  //     console.log('saved to database');
  //     res.redirect('/');
  //   });
  // });
  
  app.get('/new/:site*', function(req, res){
    var fullUrlRequested = req.params.site + req.params[0];
    var validUrlTest = /https?:\/\/(www\.)?[\w\/\-\.\%\:\+\~\#\=\?]+/;
    var validSite = validUrlTest.test(fullUrlRequested);
   if(validSite){
     console.log(fullUrlRequested + " is a valid site");
     var parentURL = req.url;
     checkIfURLinDB(fullUrlRequested);
     var shortURL = "";
     var data = { "original url": fullUrlRequested, "shortened url": shortURL };
     
   } else {
     var data = { "error":"Wrong url format. Please check your url again." };
   }

 res.send(JSON.stringify(data, null, 2));

    });
    function checkIfURLinDB(requested){
      //check to see if we already have a record for that request
      //AND check to see if there is a shortened url
      db.collection('shortener_map').find( {urlRequest: requested } ).toArray(function(err,results){
        if (err) throw err;
        if(results.length == 0){
          console.log("not in DB. adding");
          addURLtoDB(requested);
        } else {
          console.log(results.shortenedURL);
        }
      });
 function addURLtoDB(requested){
      //need to decide how to set the shortener
      //encoding must be case insensitive if using alphanumeric
      //probably actually want the other column to just be shortenedHash
     db.collection('shortener_map').insert(
       { urlRequest: requested, shortenedURL: "x" }
       )
 };

}

  })


